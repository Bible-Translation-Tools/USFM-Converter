on:
  push:
    tags:
      - "v*"

jobs:
  build-release-nix:
    name: build-release ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v2.1.0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Windows and Linux buildscript
      run: ./.github/scripts/build-nix.sh
      env:
        INSTALL4J_LICENSE: ${{ secrets.INSTALL4J_LICENSE_9 }}
    - name: Save artifact for nix
      uses: actions/upload-artifact@v2
      with:
        name: dotdeb
        path: ./installers/*.deb
  build-release-mac:
    name: build-release macos
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v2.1.0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: install create-dmg to bundle the app into a dmg
      run: brew install create-dmg
    - name: MacOS buildscript
      run: ./.github/scripts/build-mac.sh
    - name: Save artifact for mac
      uses: actions/upload-artifact@v2
      with:
        name: dotdmg
        path: ./dmg/*.dmg
  build-release-win:
    name: build-release windows installer with innosetup
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v2.1.0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: win buildscript
      run: ./.github/scripts/build-win.bat
    - name: download win and nix artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          ./output/*.exe
          ./artifacts/*.deb
          ./artifacts/*.dmg
